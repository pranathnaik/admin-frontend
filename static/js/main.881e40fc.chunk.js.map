{"version":3,"sources":["components/parts/Processor.jsx","components/parts/GraphicsCards.jsx","components/parts/Motherboard.jsx","components/parts/Psu.jsx","components/parts/Ram.jsx","components/parts/Cabinet.jsx","components/parts/Storage.jsx","components/Home.jsx","components/layout/SideDrawer.jsx","components/Laptop.jsx","components/layout/SideDrawer1.jsx","components/PreBuild.jsx","context/AdminContext.js","components/NavBar.jsx","components/login.png","components/Login.jsx","components/Settings.jsx","App.js","index.js"],"names":["Processor","useState","processor","setProcessor","toast","useToast","submit","setsubmit","name","brand","cores","model","speed","socket_type","image","price","set","setval","onchange","event","target","value","useEffect","Axios","get","then","response","data","overflow","w","h","variant","colorScheme","map","src","alt","onClick","id","delete","_id","title","description","status","duration","isClosable","isIndeterminate","color","enctype","placeholder","type","onChange","width","borderColor","post","res","catch","err","msg","isLoading","loadingText","GraphicsCard","graphics","setgraphics","chipset","memory","clock_speed","interface","console","log","Motherboard","form_factor","memory_slot","motherboard","setmotherboard","Psu","psu","setpsu","power","efficiency","Ram","qty","setRam","Cabinet","cabinet","setcabinet","side_panel","addcabinet","a","removefunc","Storage","rpm","cache","storage","setstorage","Home","bgGradient","bgClip","fontSize","fontWeight","SideDrawer","useDisclosure","isOpen","onOpen","onClose","firstField","React","useRef","ram","graphics_card","features","setlap","onsub","leftIcon","Add","placement","initialFocusRef","borderBottomWidth","onSubmit","spacing","htmlFor","ref","borderTopWidth","mr","Laptop","laptop","setlaptop","SideDrawer1","graphicscard","cooler","PreBuild","createContext","NavBar","useColorMode","toggleColorMode","colorMode","themeicon","useColorModeValue","MoonIcon","SunIcon","useContext","AdminContext","admin","setadmin","history","useHistory","p","size","icon","as","to","Button","SettingsIcon","undefined","localStorage","setItem","push","AiOutlineLogout","Login","email","password","user","setuser","preventDefault","login","axios","justify","alignSelf","imga","isRequired","Settings","passwordCheck","displayName","App","idauth","getItem","headers","checkLoggedIn","Provider","exact","path","GraphicsCards","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.881e40fc.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Input,\r\n  Button,\r\n  Flex,\r\n  useToast,\r\n  FormControl,\r\n  FormLabel,\r\n  Box,\r\n  CircularProgress,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst Processor = () => {\r\n  const [processor, setProcessor] = useState([]);\r\n  const toast = useToast();\r\n  const [submit, setsubmit] = useState(false);\r\n  const [set, setval] = useState({\r\n    name: \"\",\r\n    brand: \"\",\r\n    cores: \"\",\r\n    model: \"\",\r\n    speed: \"\",\r\n    socket_type: \"\",\r\n    image: \"\",\r\n    price: \"\",\r\n  });\r\n  const onchange = (event) => {\r\n    setval({ ...set, [event.target.name]: event.target.value });\r\n  };\r\n  const addprocessor = () => {\r\n    setsubmit(true);\r\n\r\n    Axios.post(\"https://thetechhub-admin.herokuapp.com/processor/add\", {\r\n      ...set,\r\n    })\r\n      .then((res) => {\r\n        setsubmit(false);\r\n        toast({\r\n          title: \"Processor Added\",\r\n          description: \"We've Added processor in database\",\r\n          status: \"success\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setsubmit(false);\r\n        toast({\r\n          title: \"There was an error\",\r\n          description: `${err.response.data.msg} `,\r\n          status: \"error\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  const removefunc = (id) => {\r\n    Axios.delete(`https://thetechhub-admin.herokuapp.com/processor/delete/${id._id}`).then(\r\n      () => {\r\n        toast({\r\n          title: \"Processor deleted\",\r\n          description: `${id.name} Deleted`,\r\n          status: \"error\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"https://thetechhub-admin.herokuapp.com/processor/view\").then((response) => {\r\n      setProcessor(response.data);\r\n    });\r\n  }, [processor]);\r\n\r\n  return (\r\n    <>\r\n      <Flex>\r\n        <Box overflow=\"auto\" w=\"75%\" h=\"90vh\">\r\n          <Table variant=\"striped\" colorScheme=\"teal\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th>Name</Th>\r\n                <Th>Brand</Th>\r\n                <Th>cores</Th>\r\n                <Th>model</Th>\r\n                <Th>speed</Th>\r\n                <Th>socket type</Th>\r\n                <Th>Image</Th>\r\n                <Th>price</Th>\r\n                <Th>action</Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {processor ? (\r\n                processor.map((value) => {\r\n                  return (\r\n                    <>\r\n                      <Tr>\r\n                        <Td>{value.name}</Td>\r\n                        <Td>{value.brand}</Td>\r\n                        <Td>{value.cores}</Td>\r\n                        <Td>{value.model}</Td>\r\n                        <Td>{value.speed}</Td>\r\n                        <Td>{value.socket_type}</Td>\r\n                        <Td>\r\n                          <img src={value.image} alt=\"\" />\r\n                        </Td>\r\n                        <Td>{value.price}</Td>\r\n                        <Td>\r\n                          <Button\r\n                            colorScheme=\"teal\"\r\n                            variant=\"ghost\"\r\n                            onClick={() => removefunc(value)}\r\n                          >\r\n                            REMOVE\r\n                          </Button>\r\n                        </Td>\r\n                      </Tr>\r\n                    </>\r\n                  );\r\n                })\r\n              ) : (\r\n                <>\r\n                  <CircularProgress isIndeterminate color=\"green.300\" />\r\n                </>\r\n              )}\r\n            </Tbody>\r\n          </Table>\r\n        </Box>\r\n        <Spacer />\r\n        <Box w=\"20%\">\r\n          <FormControl enctype=\"multipart/form-data\">\r\n            <FormLabel>Add CPU</FormLabel>\r\n            <Input\r\n              placeholder=\"Name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Brand\"\r\n              name=\"brand\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Cores\"\r\n              name=\"cores\"\r\n              type=\"number\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Model\"\r\n              name=\"model\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Speed\"\r\n              name=\"speed\"\r\n              type=\"number\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Socket Type\"\r\n              name=\"socket_type\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"image url\"\r\n              type=\"text\"\r\n              name=\"image\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Price\"\r\n              name=\"price\"\r\n              type=\"number\"\r\n              onChange={onchange}\r\n            />\r\n\r\n            <Button\r\n              width=\"100%\"\r\n              colorScheme=\"green\"\r\n              borderColor=\"green.500\"\r\n              onClick={addprocessor}\r\n              isLoading={submit}\r\n              loadingText=\"Submitting\"\r\n            >\r\n              Add\r\n            </Button>\r\n          </FormControl>\r\n        </Box>\r\n        <Spacer />\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Processor;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Input,\r\n  Button,\r\n  Flex,\r\n  useToast,\r\n  FormControl,\r\n  FormLabel,\r\n  Box,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst GraphicsCard = () => {\r\n  const toast = useToast();\r\n  const [graphics, setgraphics] = useState([]);\r\n  const [submit, setsubmit] = useState(false);\r\n  const [set, setval] = useState({\r\n    name: \"\",\r\n    brand: \"\",\r\n    model: \"\",\r\n    chipset: \"\",\r\n    memory: \"\",\r\n    clock_speed: \"\",\r\n    interface: \"\",\r\n    image: \"\",\r\n    price: \"\",\r\n  });\r\n  const onchange = (event) => {\r\n    setval({ ...set, [event.target.name]: event.target.value });\r\n  };\r\n  const addgraphics = () => {\r\n    setsubmit(true);\r\n    Axios.post(\"https://thetechhub-admin.herokuapp.com/graphicscard/add\", { ...set })\r\n      .then((res) => {\r\n        setsubmit(false);\r\n        toast({\r\n          title: \"Graphics Card Added\",\r\n          description: \"We've Added Graphics card in database\",\r\n          status: \"success\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setsubmit(false);\r\n        toast({\r\n          title: \"There was an error\",\r\n          description: `${err} occured`,\r\n          status: \"error\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  };\r\n  const removefunc = (id) => {\r\n    console.log(id._id);\r\n    Axios.delete(`https://thetechhub-admin.herokuapp.com/graphicscard/delete/${id._id}`)\r\n      .then((res) => {\r\n        toast({\r\n          title: \"Graphics deleted\",\r\n          description: \"We've deleted Graphics Card from db\",\r\n          status: \"success\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        toast({\r\n          title: \"There was an error\",\r\n          description: `${err} occured`,\r\n          status: \"error\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"https://thetechhub-admin.herokuapp.com/graphicscard/view\").then((response) => {\r\n      setgraphics(response.data);\r\n    });\r\n  }, [graphics]);\r\n\r\n  return (\r\n    <>\r\n      <Flex>\r\n        <Box overflow=\"auto\" w=\"75%\" h=\"90vh\">\r\n          <Table variant=\"striped\" colorScheme=\"teal\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th>Name</Th>\r\n                <Th>Brand</Th>\r\n                <Th>model</Th>\r\n\r\n                <Th>memory</Th>\r\n                <Th>clock speed</Th>\r\n                <Th>interface</Th>\r\n                <Th>image</Th>\r\n                <Th>price</Th>\r\n                <Th>action</Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {graphics.map((value) => {\r\n                return (\r\n                  <>\r\n                    <Tr>\r\n                      <Td>{value.name}</Td>\r\n                      <Td>{value.brand}</Td>\r\n                      <Td>{value.model}</Td>\r\n\r\n                      <Td>{value.memory}</Td>\r\n                      <Td>{value.clock_speed}</Td>\r\n                      <Td>{value.interface}</Td>\r\n                      <Td>\r\n                        <img src={value.image} alt=\"\" />\r\n                      </Td>\r\n                      <Td>{value.price}</Td>\r\n                      <Td>\r\n                        <Button\r\n                          colorScheme=\"teal\"\r\n                          variant=\"ghost\"\r\n                          onClick={() => removefunc(value)}\r\n                        >\r\n                          REMOVE\r\n                        </Button>\r\n                      </Td>\r\n                    </Tr>\r\n                  </>\r\n                );\r\n              })}\r\n            </Tbody>\r\n          </Table>\r\n        </Box>\r\n        <Spacer />\r\n        <Box w=\"20%\">\r\n          <FormControl enctype=\"multipart/form-data\">\r\n            <FormLabel>Add GPU</FormLabel>\r\n\r\n            <Input\r\n              placeholder=\"Name\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Brand\"\r\n              type=\"text\"\r\n              name=\"brand\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"model\"\r\n              type=\"text\"\r\n              name=\"model\"\r\n              onChange={onchange}\r\n            />\r\n\r\n            <Input\r\n              placeholder=\"Memory\"\r\n              type=\"text\"\r\n              name=\"memory\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Clock Speed\"\r\n              type=\"text\"\r\n              name=\"clock_speed\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Interface\"\r\n              type=\"text\"\r\n              name=\"interface\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"image\"\r\n              type=\"text\"\r\n              name=\"image\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Price\"\r\n              type=\"number\"\r\n              name=\"price\"\r\n              onChange={onchange}\r\n            />\r\n\r\n            <Button\r\n              width=\"100%\"\r\n              colorScheme=\"green\"\r\n              borderColor=\"green.500\"\r\n              isLoading={submit}\r\n              loadingText=\"Submitting\"\r\n              onClick={addgraphics}\r\n            >\r\n              Add\r\n            </Button>\r\n          </FormControl>\r\n        </Box>\r\n        <Spacer />\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GraphicsCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Input,\r\n  Button,\r\n  Flex,\r\n  useToast,\r\n  FormControl,\r\n  FormLabel,\r\n  Box,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\nconst Motherboard = () => {\r\n  const [set, setval] = useState({\r\n    name: \"\",\r\n    brand: \"\",\r\n    form_factor: \"\",\r\n    chipset: \"\",\r\n    socket_type: \"\",\r\n    memory_slot: \"\",\r\n    image: \"\",\r\n    price: \"\",\r\n  });\r\n  const onchange = (event) => {\r\n    setval({ ...set, [event.target.name]: event.target.value });\r\n  };\r\n  const [motherboard, setmotherboard] = useState([]);\r\n  const toast = useToast();\r\n  const [submit, setsubmit] = useState(false);\r\n  const addmotherboard = () => {\r\n    setsubmit(true);\r\n    Axios.post(\"https://thetechhub-admin.herokuapp.com/motherboard/add\", {\r\n      ...set,\r\n    })\r\n      .then((res) => {\r\n        setsubmit(false);\r\n        toast({\r\n          title: \"Processor Added\",\r\n          description: \"We've Added processor in database\",\r\n          status: \"success\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setsubmit(false);\r\n        toast({\r\n          title: \"There was an error\",\r\n          description: `${err} occured`,\r\n          status: \"error\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  };\r\n  const removefunc = (id) => {\r\n    Axios.delete(`https://thetechhub-admin.herokuapp.com/motherboard/delete/${id._id}`).then(\r\n      () => {\r\n        toast({\r\n          title: \"Processor deleted\",\r\n          description: `${id.name} Deleted`,\r\n          status: \"error\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"https://thetechhub-admin.herokuapp.com/motherboard/view\").then((response) => {\r\n      setmotherboard(response.data);\r\n    });\r\n  }, [motherboard]);\r\n\r\n  return (\r\n    <>\r\n      <Flex>\r\n        <Box overflow=\"auto\" w=\"75%\" h=\"90vh\">\r\n          <Table variant=\"striped\" colorScheme=\"teal\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th>Name</Th>\r\n                <Th>Brand</Th>\r\n                <Th>formFactor</Th>\r\n                <Th>chipset</Th>\r\n                <Th>socketType</Th>\r\n                <Th>memorySlot </Th>\r\n                <Th>image </Th>\r\n                <Th>price</Th>\r\n                <Th>action</Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {motherboard.map((value) => {\r\n                return (\r\n                  <>\r\n                    <Tr>\r\n                      <Td>{value.name}</Td>\r\n                      <Td>{value.brand}</Td>\r\n                      <Td>{value.form_factor}</Td>\r\n                      <Td>{value.chipset}</Td>\r\n                      <Td>{value.socket_type}</Td>\r\n                      <Td>{value.memory_slot}</Td>\r\n                      <Td>\r\n                        <img src={value.image} alt=\"\" />\r\n                      </Td>\r\n                      <Td>{value.price}</Td>\r\n                      <Td>\r\n                        <Button\r\n                          colorScheme=\"teal\"\r\n                          variant=\"ghost\"\r\n                          onClick={() => removefunc(value)}\r\n                        >\r\n                          REMOVE\r\n                        </Button>\r\n                      </Td>\r\n                    </Tr>\r\n                  </>\r\n                );\r\n              })}\r\n            </Tbody>\r\n          </Table>\r\n        </Box>\r\n        <Spacer />\r\n        <Box w=\"20%\">\r\n          <FormControl>\r\n            <FormLabel>Add Motherboard</FormLabel>\r\n            <Input\r\n              placeholder=\"Name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Brand\"\r\n              name=\"brand\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Form Factor\"\r\n              name=\"form_factor\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Chipset\"\r\n              name=\"chipset\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Socket Type\"\r\n              name=\"socket_type\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Memory Slot\"\r\n              name=\"memory_slot\"\r\n              type=\"number\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"image\"\r\n              name=\"image\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Price\"\r\n              name=\"price\"\r\n              type=\"number\"\r\n              onChange={onchange}\r\n            />\r\n            <Button\r\n              width=\"100%\"\r\n              colorScheme=\"green\"\r\n              borderColor=\"green.500\"\r\n              isLoading={submit}\r\n              loadingText=\"Submitting\"\r\n              onClick={addmotherboard}\r\n            >\r\n              Add\r\n            </Button>\r\n          </FormControl>\r\n        </Box>\r\n        <Spacer />\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Motherboard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Input,\r\n  Button,\r\n  Flex,\r\n  useToast,\r\n  FormControl,\r\n  FormLabel,\r\n  Box,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst Psu = () => {\r\n  const toast = useToast();\r\n  const [submit, setsubmit] = useState(false);\r\n  const [psu, setpsu] = useState([]);\r\n  const [set, setval] = useState({\r\n    name: \"\",\r\n    brand: \"\",\r\n    model: \"\",\r\n    power: \"\",\r\n    efficiency: \"\",\r\n    image: \"\",\r\n    price: \"\",\r\n  });\r\n  const onchange = (event) => {\r\n    setval({ ...set, [event.target.name]: event.target.value });\r\n  };\r\n  const addpsu = () => {\r\n    setsubmit(true);\r\n\r\n    Axios.post(\"https://thetechhub-admin.herokuapp.com/psu/add\", {\r\n      ...set,\r\n    })\r\n      .then((res) => {\r\n        setsubmit(false);\r\n        toast({\r\n          title: \"Psu Added\",\r\n          description: \"We've Added Psu in database\",\r\n          status: \"success\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setsubmit(false);\r\n        toast({\r\n          title: \"There was an error\",\r\n          description: `${err} occured`,\r\n          status: \"error\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  const removefunc = (id) => {\r\n    Axios.delete(`https://thetechhub-admin.herokuapp.com/psu/delete/${id._id}`).then(() => {\r\n      toast({\r\n        title: \"Psu deleted\",\r\n        description: `${id.name} Deleted`,\r\n        status: \"error\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"https://thetechhub-admin.herokuapp.com/psu/view\").then((response) => {\r\n      setpsu(response.data);\r\n    });\r\n  }, [psu]);\r\n\r\n  return (\r\n    <>\r\n      <Flex>\r\n        <Box overflow=\"auto\" w=\"75%\" h=\"90vh\">\r\n          <Table variant=\"striped\" colorScheme=\"teal\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th>name</Th>\r\n                <Th>brand</Th>\r\n                <Th>model</Th>\r\n                <Th>power</Th>\r\n                <Th>efficiency</Th>\r\n                <Th>image</Th>\r\n                <Th>price</Th>\r\n                <Th>action</Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {psu.map((value) => {\r\n                return (\r\n                  <>\r\n                    <Tr>\r\n                      <Td>{value.name}</Td>\r\n                      <Td>{value.brand}</Td>\r\n                      <Td>{value.model}</Td>\r\n                      <Td>{value.power}</Td>\r\n                      <Td>{value.efficiency}</Td>\r\n                      <Td>\r\n                        <img src={value.image} alt=\"\" />\r\n                      </Td>\r\n                      <Td>{value.price}</Td>\r\n                      <Td>\r\n                        <Button\r\n                          colorScheme=\"teal\"\r\n                          variant=\"ghost\"\r\n                          onClick={() => removefunc(value)}\r\n                        >\r\n                          REMOVE\r\n                        </Button>\r\n                      </Td>\r\n                    </Tr>\r\n                  </>\r\n                );\r\n              })}\r\n            </Tbody>\r\n          </Table>\r\n        </Box>\r\n        <Spacer />\r\n        <Box w=\"20%\">\r\n          <FormControl enctype=\"multipart/form-data\">\r\n            <FormLabel>Add PSU</FormLabel>\r\n            <Input\r\n              placeholder=\"Name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Brand\"\r\n              name=\"brand\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"model\"\r\n              name=\"model\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"power\"\r\n              name=\"power\"\r\n              type=\"number\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"efficiency\"\r\n              name=\"efficiency\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"image\"\r\n              name=\"image\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Price\"\r\n              name=\"price\"\r\n              type=\"number\"\r\n              onChange={onchange}\r\n            />\r\n\r\n            <Button\r\n              width=\"100%\"\r\n              colorScheme=\"green\"\r\n              borderColor=\"green.500\"\r\n              onClick={addpsu}\r\n              isLoading={submit}\r\n              loadingText=\"Submitting\"\r\n            >\r\n              Add\r\n            </Button>\r\n          </FormControl>\r\n        </Box>\r\n        <Spacer />\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Psu;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Input,\r\n  Button,\r\n  Flex,\r\n  useToast,\r\n  FormControl,\r\n  FormLabel,\r\n  Box,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst Ram = () => {\r\n  const toast = useToast();\r\n  const [set, setval] = useState({\r\n    name: \"\",\r\n    brand: \"\",\r\n    model: \"\",\r\n    speed: \"\",\r\n    memory: \"\",\r\n    qty: \"\",\r\n    type: \"\",\r\n    image: \"\",\r\n    price: \"\",\r\n  });\r\n  const onchange = (event) => {\r\n    setval({ ...set, [event.target.name]: event.target.value });\r\n  };\r\n  const [Ram, setRam] = useState([]);\r\n  const [submit, setsubmit] = useState(false);\r\n  const addram = () => {\r\n    setsubmit(true);\r\n    Axios.post(\"https://thetechhub-admin.herokuapp.com/ram/add\", {\r\n      ...set,\r\n    })\r\n      .then((res) => {\r\n        setsubmit(false);\r\n        toast({\r\n          title: \"Ram Card Added\",\r\n          description: \"We've Added Ram card in database\",\r\n          status: \"success\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setsubmit(false);\r\n        toast({\r\n          title: \"There was an error\",\r\n          description: `${err} occured`,\r\n          status: \"error\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  };\r\n  const removefunc = (id) => {\r\n    console.log(id._id);\r\n    Axios.delete(`https://thetechhub-admin.herokuapp.com/ram/delete/${id._id}`)\r\n      .then((res) => {\r\n        toast({\r\n          title: \"Ram deleted\",\r\n          description: \"We've deleted Ram Card from db\",\r\n          status: \"success\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        toast({\r\n          title: \"There was an error\",\r\n          description: `${err} occured`,\r\n          status: \"error\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"https://thetechhub-admin.herokuapp.com/ram/view\").then((response) => {\r\n      setRam(response.data);\r\n    });\r\n  }, [Ram]);\r\n\r\n  return (\r\n    <>\r\n      <Flex>\r\n        <Box overflow=\"auto\" w=\"75%\" h=\"90vh\">\r\n          <Table variant=\"striped\" colorScheme=\"teal\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th>Name</Th>\r\n                <Th>Brand</Th>\r\n                <Th>model</Th>\r\n                <Th>speed</Th>\r\n                <Th>memory</Th>\r\n                <Th>qty</Th>\r\n                <Th>type</Th>\r\n                <Th>image</Th>\r\n                <Th>price</Th>\r\n                <Th>action</Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {Ram.map((value) => {\r\n                return (\r\n                  <>\r\n                    <Tr>\r\n                      <Td>{value.name}</Td>\r\n                      <Td>{value.brand}</Td>\r\n                      <Td>{value.model}</Td>\r\n                      <Td>{value.speed}</Td>\r\n                      <Td>{value.memory}</Td>\r\n                      <Td>{value.qty}</Td>\r\n                      <Td>{value.type}</Td>\r\n                      <Td>\r\n                        <img src={value.image} alt=\"\" />\r\n                      </Td>\r\n                      <Td>{value.price}</Td>\r\n                      <Td>\r\n                        <Button\r\n                          colorScheme=\"teal\"\r\n                          variant=\"ghost\"\r\n                          onClick={() => removefunc(value)}\r\n                        >\r\n                          REMOVE\r\n                        </Button>\r\n                      </Td>\r\n                    </Tr>\r\n                  </>\r\n                );\r\n              })}\r\n            </Tbody>\r\n          </Table>\r\n        </Box>\r\n        <Spacer />\r\n        <Box w=\"20%\">\r\n          <FormControl enctype=\"multipart/form-data\">\r\n            <FormLabel>Add GPU</FormLabel>\r\n\r\n            <Input\r\n              placeholder=\"Name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Brand\"\r\n              name=\"brand\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"model\"\r\n              name=\"model\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Speed\"\r\n              name=\"speed\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Memory\"\r\n              name=\"memory\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"qty\"\r\n              name=\"qty\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"type\"\r\n              name=\"type\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"image\"\r\n              name=\"image\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Price\"\r\n              name=\"price\"\r\n              type=\"number\"\r\n              onChange={onchange}\r\n            />\r\n\r\n            <Button\r\n              width=\"100%\"\r\n              colorScheme=\"green\"\r\n              borderColor=\"green.500\"\r\n              isLoading={submit}\r\n              loadingText=\"Submitting\"\r\n              onClick={addram}\r\n            >\r\n              Add\r\n            </Button>\r\n          </FormControl>\r\n        </Box>\r\n        <Spacer />\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ram;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Input,\r\n  Button,\r\n  Flex,\r\n  useToast,\r\n  FormControl,\r\n  FormLabel,\r\n  Box,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst Cabinet = () => {\r\n  const [cabinet, setcabinet] = useState([]);\r\n  const [set, setval] = useState({\r\n    name: \"\",\r\n    brand: \"\",\r\n    side_panel: \"\",\r\n    model: \"\",\r\n    type: \"\",\r\n    color: \"\",\r\n    image: \"\",\r\n    price: \"\",\r\n  });\r\n  const toast = useToast();\r\n  const [submit, setsubmit] = useState(false);\r\n  const onchange = (event) => {\r\n    setval({ ...set, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const addcabinet = async () => {\r\n    setsubmit(true);\r\n    await Axios.post(\"https://thetechhub-admin.herokuapp.com/cabinet/add\", {\r\n      ...set,\r\n    })\r\n      .then((res) => {\r\n        setsubmit(false);\r\n        toast({\r\n          title: \"cabinet Added\",\r\n          description: \"We've Added cabinet in database\",\r\n          status: \"success\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setsubmit(false);\r\n        toast({\r\n          title: \"There was an error\",\r\n          description: `${err.response.data.msg} `,\r\n          status: \"error\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  const removefunc = async (id) => {\r\n    await Axios.delete(`https://thetechhub-admin.herokuapp.com/cabinet/delete/${id._id}`).then(\r\n      () => {\r\n        toast({\r\n          title: \"cabinet deleted\",\r\n          description: `${id.name} Deleted`,\r\n          status: \"error\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"https://thetechhub-admin.herokuapp.com/cabinet/view\").then((response) => {\r\n      setcabinet(response.data);\r\n    });\r\n  }, [cabinet]);\r\n\r\n  return (\r\n    <>\r\n      <Flex>\r\n        <Box overflow=\"auto\" w=\"75%\" h=\"90vh\">\r\n          <Table variant=\"striped\" colorScheme=\"teal\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th>name</Th>\r\n                <Th>brand</Th>\r\n                <Th>side_panel</Th>\r\n                <Th>model</Th>\r\n                <Th>type</Th>\r\n                <Th>color</Th>\r\n                <Th>image</Th>\r\n                <Th>price</Th>\r\n                <Th>action</Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {cabinet.map((value) => {\r\n                return (\r\n                  <>\r\n                    <Tr>\r\n                      <Td>{value.name}</Td>\r\n                      <Td>{value.brand}</Td>\r\n                      <Td>{value.side_panel}</Td>\r\n                      <Td>{value.model}</Td>\r\n                      <Td>{value.type}</Td>\r\n                      <Td>{value.color}</Td>\r\n                      <Td>\r\n                        <img src={value.image} alt=\"\" />\r\n                      </Td>\r\n                      <Td>{value.price}</Td>\r\n                      <Td>\r\n                        <Button\r\n                          colorScheme=\"teal\"\r\n                          variant=\"ghost\"\r\n                          onClick={() => removefunc(value)}\r\n                        >\r\n                          REMOVE\r\n                        </Button>\r\n                      </Td>\r\n                    </Tr>\r\n                  </>\r\n                );\r\n              })}\r\n            </Tbody>\r\n          </Table>\r\n        </Box>\r\n        <Spacer />\r\n        <Box w=\"20%\">\r\n          <FormControl>\r\n            <FormLabel>Add CPU</FormLabel>\r\n            <Input\r\n              placeholder=\"Name\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Brand\"\r\n              type=\"text\"\r\n              name=\"brand\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"sidepanel\"\r\n              type=\"text\"\r\n              name=\"side_panel\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Model\"\r\n              type=\"text\"\r\n              name=\"model\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"type\"\r\n              type=\"text\"\r\n              name=\"type\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"color \"\r\n              type=\"text\"\r\n              name=\"color\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"image\"\r\n              name=\"image\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Price\"\r\n              type=\"number\"\r\n              name=\"price\"\r\n              onChange={onchange}\r\n            />\r\n\r\n            <Button\r\n              width=\"100%\"\r\n              colorScheme=\"green\"\r\n              borderColor=\"green.500\"\r\n              onClick={addcabinet}\r\n              isLoading={submit}\r\n              loadingText=\"Submitting\"\r\n            >\r\n              Add\r\n            </Button>\r\n          </FormControl>\r\n        </Box>\r\n        <Spacer />\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cabinet;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Input,\r\n  Button,\r\n  Flex,\r\n  useToast,\r\n  FormControl,\r\n  FormLabel,\r\n  Box,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\nconst Storage = () => {\r\n  const [set, setval] = useState({\r\n    name: \"\",\r\n    brand: \"\",\r\n    model: \"\",\r\n    rpm: \"\",\r\n    cache: \"\",\r\n    type: \"\",\r\n    interface: \"\",\r\n    image: \"\",\r\n    price: \"\",\r\n  });\r\n  const [storage, setstorage] = useState([]);\r\n  console.log(storage);\r\n  const onchange = (event) => {\r\n    setval({ ...set, [event.target.name]: event.target.value });\r\n  };\r\n  const toast = useToast();\r\n  const [submit, setsubmit] = useState(false);\r\n  const addstorage = () => {\r\n    setsubmit(true);\r\n    Axios.post(\"https://thetechhub-admin.herokuapp.com/storage/add\", {\r\n      ...set,\r\n    })\r\n      .then((res) => {\r\n        setsubmit(false);\r\n        toast({\r\n          title: \"Storage Added\",\r\n          description: \"We've Added Storage in database\",\r\n          status: \"success\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setsubmit(false);\r\n        toast({\r\n          title: \"There was an error\",\r\n          description: `${err.response.data.msg} occured`,\r\n          status: \"error\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  };\r\n  const removefunc = (id) => {\r\n    Axios.delete(\r\n      `https://thetechhub-admin.herokuapp.com/storage/delete/${id._id}`\r\n    ).then(() => {\r\n      toast({\r\n        title: \"Storage deleted\",\r\n        description: `${id.name} Deleted`,\r\n        status: \"error\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"https://thetechhub-admin.herokuapp.com/storage/view\").then(\r\n      (response) => {\r\n        setstorage(response.data);\r\n      }\r\n    );\r\n  }, [storage]);\r\n\r\n  return (\r\n    <>\r\n      <Flex>\r\n        <Box overflow=\"auto\" w=\"75%\" h=\"90vh\">\r\n          <Table variant=\"striped\" colorScheme=\"teal\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th>Name</Th>\r\n                <Th>Brand</Th>\r\n                <Th>model</Th>\r\n                <Th>rpm</Th>\r\n                <Th>cache</Th>\r\n                <Th>type </Th>\r\n                <Th>interface</Th>\r\n                <Th>image</Th>\r\n                <Th>price</Th>\r\n                <Th>action</Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {storage.map((value) => {\r\n                return (\r\n                  <>\r\n                    <Tr>\r\n                      <Td>{value.name}</Td>\r\n                      <Td>{value.brand}</Td>\r\n                      <Td>{value.model}</Td>\r\n                      <Td>{value.rpm}</Td>\r\n                      <Td>{value.cache}</Td>\r\n                      <Td>{value.type}</Td>\r\n                      <Td>{value.interface}</Td>\r\n                      <Td>\r\n                        <img src={value.image} alt=\"\" />\r\n                      </Td>\r\n                      <Td>{value.price}</Td>\r\n                      <Td>\r\n                        <Button\r\n                          colorScheme=\"teal\"\r\n                          variant=\"ghost\"\r\n                          onClick={() => removefunc(value)}\r\n                        >\r\n                          REMOVE\r\n                        </Button>\r\n                      </Td>\r\n                    </Tr>\r\n                  </>\r\n                );\r\n              })}\r\n            </Tbody>\r\n          </Table>\r\n        </Box>\r\n        <Spacer />\r\n        <Box w=\"20%\">\r\n          <FormControl>\r\n            <FormLabel>Add storage</FormLabel>\r\n            <Input\r\n              placeholder=\"Name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Brand\"\r\n              name=\"brand\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Form Factor\"\r\n              name=\"model\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"rpm\"\r\n              name=\"rpm\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n\r\n            <Input\r\n              placeholder=\"type\"\r\n              name=\"type\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"interface\"\r\n              name=\"interface\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"image\"\r\n              name=\"image\"\r\n              type=\"text\"\r\n              onChange={onchange}\r\n            />\r\n            <Input\r\n              placeholder=\"Price\"\r\n              name=\"price\"\r\n              type=\"number\"\r\n              onChange={onchange}\r\n            />\r\n            <Button\r\n              width=\"100%\"\r\n              colorScheme=\"green\"\r\n              borderColor=\"green.500\"\r\n              isLoading={submit}\r\n              loadingText=\"Submitting\"\r\n              onClick={addstorage}\r\n            >\r\n              Add\r\n            </Button>\r\n          </FormControl>\r\n        </Box>\r\n        <Spacer />\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Storage;\r\n","import React from \"react\";\r\nimport { Text } from \"@chakra-ui/react\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Text\r\n        bgGradient=\"linear(to-l, #7928CA,#FF0080)\"\r\n        bgClip=\"text\"\r\n        fontSize=\"6xl\"\r\n        fontWeight=\"extrabold\"\r\n      >\r\n        Home\r\n      </Text>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  useDisclosure,\r\n  Button,\r\n  Stack,\r\n  Box,\r\n  FormLabel,\r\n  Input,\r\n  InputGroup,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport Axios from \"axios\";\r\n\r\nconst SideDrawer = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const firstField = React.useRef();\r\n  const [submit, setsubmit] = useState(false);\r\n  const toast = useToast();\r\n  const [set, setlap] = useState({\r\n    name: \"\",\r\n    brand: \"\",\r\n    model: \"\",\r\n    processor: \"\",\r\n    ram: \"\",\r\n    storage: \"\",\r\n    graphics_card: \"\",\r\n    features: \"\",\r\n    image: \"\",\r\n    price: \"\",\r\n  });\r\n\r\n  const onchange = (event) => {\r\n    setlap({ ...set, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const onsub = () => {\r\n    setsubmit(true);\r\n    Axios.post(\"http://localhost:5000/laptop/add\", {\r\n      ...set,\r\n    })\r\n      .then((res) => {\r\n        setsubmit(false);\r\n        toast({\r\n          title: \"laptop Added\",\r\n          description: \"We've Added laptop in database\",\r\n          status: \"success\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setsubmit(false);\r\n        toast({\r\n          title: \"There was an error\",\r\n          description: `${err.response.data.msg} `,\r\n          status: \"error\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button leftIcon={<AddIcon />} colorScheme=\"teal\" onClick={onOpen}>\r\n        Add Laptop\r\n      </Button>\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        placement=\"right\"\r\n        initialFocusRef={firstField}\r\n        onClose={onClose}\r\n      >\r\n        <DrawerOverlay>\r\n          <DrawerContent>\r\n            <DrawerCloseButton />\r\n            <DrawerHeader borderBottomWidth=\"1px\">Add New Laptop</DrawerHeader>\r\n\r\n            <DrawerBody>\r\n              <form onSubmit={onsub}>\r\n                <Stack spacing=\"24px\">\r\n                  <Box>\r\n                    <FormLabel htmlFor=\"username\">Name</FormLabel>\r\n                    <Input\r\n                      ref={firstField}\r\n                      id=\"username\"\r\n                      onChange={onchange}\r\n                      name=\"name\"\r\n                    />\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <FormLabel htmlFor=\"brand\">Brand</FormLabel>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"brand\"\r\n                        onChange={onchange}\r\n                        name=\"brand\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <FormLabel htmlFor=\"model\">Model</FormLabel>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"model\"\r\n                        onChange={onchange}\r\n                        name=\"model\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <FormLabel htmlFor=\"processor\">Processor</FormLabel>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"processor\"\r\n                        onChange={onchange}\r\n                        name=\"processor\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <FormLabel htmlFor=\"ram\">ram</FormLabel>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"ram\"\r\n                        onChange={onchange}\r\n                        name=\"ram\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <FormLabel htmlFor=\"storage\">storage</FormLabel>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"storage\"\r\n                        onChange={onchange}\r\n                        name=\"storage\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <FormLabel htmlFor=\"graphics_card\">graphics_card</FormLabel>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"graphics_card\"\r\n                        name=\"graphics_card\"\r\n                        onChange={onchange}\r\n                      />\r\n                    </InputGroup>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <FormLabel htmlFor=\"features\">features</FormLabel>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"features\"\r\n                        onChange={onchange}\r\n                        name=\"features\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <FormLabel htmlFor=\"image\">image</FormLabel>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"image\"\r\n                        onChange={onchange}\r\n                        name=\"image\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <FormLabel htmlFor=\"price\">price</FormLabel>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        id=\"price\"\r\n                        onChange={onchange}\r\n                        name=\"price\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Box>\r\n                </Stack>\r\n              </form>\r\n            </DrawerBody>\r\n\r\n            <DrawerFooter borderTopWidth=\"1px\">\r\n              <Button variant=\"outline\" mr={3} onClick={onClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                colorScheme=\"blue\"\r\n                isLoading={submit}\r\n                loadingText=\"Submitting\"\r\n                onClick={onsub}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </DrawerFooter>\r\n          </DrawerContent>\r\n        </DrawerOverlay>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Button,\r\n  Flex,\r\n  useToast,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\nimport SideDrawer from \"./layout/SideDrawer\";\r\n\r\nimport Axios from \"axios\";\r\n\r\nconst Laptop = () => {\r\n  const toast = useToast();\r\n  const [laptop, setlaptop] = useState([]);\r\n  const removefunc = async (id) => {\r\n    await Axios.delete(`https://thetechhub-admin.herokuapp.com//laptop/delete/${id._id}`).then(\r\n      () => {\r\n        toast({\r\n          title: \"laptop deleted\",\r\n          description: `${id.name} Deleted`,\r\n          status: \"error\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"https://thetechhub-admin.herokuapp.com//laptop/view\")\r\n      .then((response) => {\r\n        setlaptop(response.data);\r\n      })\r\n      .catch((err) => {\r\n        toast({\r\n          title: \"there was an error\",\r\n          description: `${err.response.data.msg}`,\r\n          status: \"warning\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  }, [laptop]);\r\n  return (\r\n    <>\r\n      <Flex>\r\n        <SideDrawer />\r\n        <Box overflow=\"auto\" w=\"100%\" h=\"90vh\">\r\n          <Table variant=\"striped\" colorScheme=\"teal\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th>name</Th>\r\n                <Th>brand</Th>\r\n                <Th>model</Th>\r\n                <Th>processor</Th>\r\n                <Th>ram</Th>\r\n                <Th>storage</Th>\r\n                <Th>graphics_card</Th>\r\n                <Th>features</Th>\r\n                <Th>image</Th>\r\n                <Th>price</Th>\r\n\r\n                <Th>delete</Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {laptop.map((value) => {\r\n                return (\r\n                  <>\r\n                    <Tr>\r\n                      <Td>{value.name}</Td>\r\n                      <Td>{value.brand}</Td>\r\n                      <Td>{value.model}</Td>\r\n                      <Td>{value.processor}</Td>\r\n                      <Td>{value.ram}</Td>\r\n                      <Td>{value.storage}</Td>\r\n                      <Td>{value.graphics_card}</Td>\r\n                      <Td>{value.features}</Td>\r\n                      <Td>\r\n                        <img src={value.image} alt=\"\" />\r\n                      </Td>\r\n                      <Td>{value.price}</Td>\r\n                      <Td>\r\n                        <Button\r\n                          colorScheme=\"teal\"\r\n                          variant=\"ghost\"\r\n                          onClick={() => removefunc(value)}\r\n                        >\r\n                          REMOVE\r\n                        </Button>\r\n                      </Td>\r\n                    </Tr>\r\n                  </>\r\n                );\r\n              })}\r\n            </Tbody>\r\n          </Table>\r\n        </Box>\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Laptop;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  useDisclosure,\r\n  Button,\r\n  Stack,\r\n  Box,\r\n  FormLabel,\r\n  Input,\r\n  InputGroup,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport Axios from \"axios\";\r\n\r\nconst SideDrawer1 = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const firstField = React.useRef();\r\n  const [submit, setsubmit] = useState(false);\r\n  const toast = useToast();\r\n  const [set, setlap] = useState({\r\n    name: \"\",\r\n    processor: \"\",\r\n    motherboard: \"\",\r\n    graphicscard: \"\",\r\n    storage: \"\",\r\n    cabinet: \"\",\r\n    psu: \"\",\r\n    ram: \"\",\r\n    cooler: \"\",\r\n    image: \"\",\r\n    price: \"\",\r\n  });\r\n\r\n  const onchange = (event) => {\r\n    setlap({ ...set, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const onsub = () => {\r\n    setsubmit(true);\r\n    Axios.post(\"http://localhost:5000/prebuild/add\", {\r\n      ...set,\r\n    })\r\n      .then((res) => {\r\n        setsubmit(false);\r\n        toast({\r\n          title: \"laptop Added\",\r\n          description: \"We've Added prebuild in database\",\r\n          status: \"success\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setsubmit(false);\r\n        toast({\r\n          title: \"There was an error\",\r\n          description: `${err.response.data.msg} `,\r\n          status: \"error\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button leftIcon={<AddIcon />} colorScheme=\"teal\" onClick={onOpen}>\r\n        Add prebuild\r\n      </Button>\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        placement=\"right\"\r\n        initialFocusRef={firstField}\r\n        onClose={onClose}\r\n      >\r\n        <DrawerOverlay>\r\n          <DrawerContent>\r\n            <DrawerCloseButton />\r\n            <DrawerHeader borderBottomWidth=\"1px\">\r\n              Add New prebuild\r\n            </DrawerHeader>\r\n\r\n            <DrawerBody>\r\n              <form onSubmit={onsub}>\r\n                <Stack spacing=\"24px\">\r\n                  <Box>\r\n                    <FormLabel htmlFor=\"username\">name</FormLabel>\r\n                    <Input\r\n                      ref={firstField}\r\n                      id=\"username\"\r\n                      onChange={onchange}\r\n                      name=\"name\"\r\n                    />\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <FormLabel htmlFor=\"brand\">processor:</FormLabel>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"brand\"\r\n                        onChange={onchange}\r\n                        name=\"processor\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <FormLabel htmlFor=\"model\">motherboard</FormLabel>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"model\"\r\n                        onChange={onchange}\r\n                        name=\"motherboard\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <FormLabel htmlFor=\"processor\">graphicscard</FormLabel>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"processor\"\r\n                        onChange={onchange}\r\n                        name=\"graphicscard\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <FormLabel htmlFor=\"ram\">storage</FormLabel>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"ram\"\r\n                        onChange={onchange}\r\n                        name=\"storage\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <FormLabel htmlFor=\"storage\">cabinet</FormLabel>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"storage\"\r\n                        onChange={onchange}\r\n                        name=\"cabinet\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <FormLabel htmlFor=\"graphics_card\">psu</FormLabel>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"graphics_card\"\r\n                        name=\"psu\"\r\n                        onChange={onchange}\r\n                      />\r\n                    </InputGroup>\r\n                  </Box>\r\n                  <Box>\r\n                    <FormLabel htmlFor=\"graphics_card\">ram</FormLabel>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"graphics_card\"\r\n                        name=\"ram\"\r\n                        onChange={onchange}\r\n                      />\r\n                    </InputGroup>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <FormLabel htmlFor=\"features\">cooler</FormLabel>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"features\"\r\n                        onChange={onchange}\r\n                        name=\"cooler\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <FormLabel htmlFor=\"image\">image</FormLabel>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"image\"\r\n                        onChange={onchange}\r\n                        name=\"image\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <FormLabel htmlFor=\"price\">price</FormLabel>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        id=\"price\"\r\n                        onChange={onchange}\r\n                        name=\"price\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Box>\r\n                </Stack>\r\n              </form>\r\n            </DrawerBody>\r\n\r\n            <DrawerFooter borderTopWidth=\"1px\">\r\n              <Button variant=\"outline\" mr={3} onClick={onClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                colorScheme=\"blue\"\r\n                isLoading={submit}\r\n                loadingText=\"Submitting\"\r\n                onClick={onsub}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </DrawerFooter>\r\n          </DrawerContent>\r\n        </DrawerOverlay>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideDrawer1;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Button,\r\n  Flex,\r\n  useToast,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\nimport Axios from \"axios\";\r\nimport SideDrawer from \"./layout/SideDrawer1\";\r\nconst PreBuild = () => {\r\n  const toast = useToast();\r\n  const [laptop, setlaptop] = useState([]);\r\n  const removefunc = async (id) => {\r\n    await Axios.delete(`https://thetechhub-admin.herokuapp.com/prebuild/delete/${id._id}`).then(\r\n      () => {\r\n        toast({\r\n          title: \"laptop deleted\",\r\n          description: `${id.name} Deleted`,\r\n          status: \"error\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"https://thetechhub-admin.herokuapp.com/prebuild/view\")\r\n      .then((response) => {\r\n        setlaptop(response.data);\r\n      })\r\n      .catch((err) => {\r\n        toast({\r\n          title: \"there was an error\",\r\n          description: `${err.response.data.msg}`,\r\n          status: \"warning\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  }, [laptop]);\r\n  return (\r\n    <>\r\n      <Flex>\r\n        <SideDrawer />\r\n        <Box overflow=\"auto\" w=\"100%\" h=\"90vh\">\r\n          <Table variant=\"striped\" colorScheme=\"teal\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th>name</Th>\r\n                <Th>processor</Th>\r\n                <Th>motherboard</Th>\r\n                <Th>graphicscard:</Th>\r\n                <Th>storage</Th>\r\n                <Th>cabinet</Th>\r\n                <Th>psu</Th>\r\n                <Th>ram</Th>\r\n                <Th>cooler</Th>\r\n                <Th>image</Th>\r\n                <Th>price</Th>\r\n\r\n                <Th>delete</Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {laptop.map((value) => {\r\n                return (\r\n                  <>\r\n                    <Tr>\r\n                      <Td>{value.name}</Td>\r\n                      <Td>{value.processor}</Td>\r\n                      <Td>{value.motherboard}</Td>\r\n                      <Td>{value.graphicscard}</Td>\r\n                      <Td>{value.storage}</Td>\r\n                      <Td>{value.cabinet}</Td>\r\n                      <Td>{value.psu}</Td>\r\n                      <Td>{value.ram}</Td>\r\n                      <Td>{value.cooler}</Td>\r\n                      <Td>\r\n                        <img src={value.image} alt=\"\" />\r\n                      </Td>\r\n                      <Td>{value.price}</Td>\r\n                      <Td>\r\n                        <Button\r\n                          colorScheme=\"teal\"\r\n                          variant=\"ghost\"\r\n                          onClick={() => removefunc(value)}\r\n                        >\r\n                          REMOVE\r\n                        </Button>\r\n                      </Td>\r\n                    </Tr>\r\n                  </>\r\n                );\r\n              })}\r\n            </Tbody>\r\n          </Table>\r\n        </Box>\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PreBuild;\r\n","import { createContext } from \"react\";\r\n\r\nexport default createContext(null);\r\n","import React, { useContext } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  useColorMode,\r\n  Box,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  IconButton,\r\n  HStack,\r\n  useColorModeValue,\r\n  Icon,\r\n} from \"@chakra-ui/react\";\r\nimport { MoonIcon, SunIcon, SettingsIcon } from \"@chakra-ui/icons\";\r\nimport { FaHome } from \"react-icons/fa\";\r\nimport { AiOutlineLogout } from \"react-icons/ai\";\r\nimport AdminContext from \"../context/AdminContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst NavBar = () => {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const themeicon = useColorModeValue(MoonIcon, SunIcon);\r\n  const { admin, setadmin } = useContext(AdminContext);\r\n  const history = useHistory();\r\n  const logout = () => {\r\n    setadmin({\r\n      id: undefined,\r\n      admin: undefined,\r\n    });\r\n    localStorage.setItem(\"x-auth-id\", \"\");\r\n    history.push(\"/login\");\r\n  };\r\n  return (\r\n    <>\r\n      <Box w=\"100%\" p={4}>\r\n        <HStack spacing=\"24px\">\r\n          <IconButton\r\n            size=\"md\"\r\n            fontSize=\"lg\"\r\n            onClick={toggleColorMode}\r\n            icon={<Icon as={themeicon} />}\r\n          />\r\n          {admin.admin ? (\r\n            <>\r\n              <Button leftIcon={<FaHome />} variant=\"link\" size=\"md\">\r\n                <Link to=\"/\">Home</Link>\r\n              </Button>\r\n\r\n              <Button variant=\"link\" size=\"md\">\r\n                <Link to=\"/prebuild\">Prebuild</Link>\r\n              </Button>\r\n\r\n              <Button variant=\"link\" size=\"md\">\r\n                <Link to=\"/laptop\">Laptop</Link>\r\n              </Button>\r\n\r\n              <Menu>\r\n                <MenuButton as={Button}>Components</MenuButton>\r\n                <MenuList>\r\n                  <Link to=\"/Processor\">\r\n                    <MenuItem>Processor</MenuItem>\r\n                  </Link>\r\n\r\n                  <Link to=\"/graphicscard\">\r\n                    <MenuItem>Graphics Card </MenuItem>\r\n                  </Link>\r\n\r\n                  <Link to=\"/Motherboard\">\r\n                    <MenuItem>Motherboard </MenuItem>\r\n                  </Link>\r\n\r\n                  <Link to=\"/ram\">\r\n                    <MenuItem>Ram </MenuItem>\r\n                  </Link>\r\n\r\n                  <Link to=\"/cabinet\">\r\n                    <MenuItem>Cabinet </MenuItem>\r\n                  </Link>\r\n\r\n                  <Link to=\"/psu\">\r\n                    <MenuItem>Psu </MenuItem>\r\n                  </Link>\r\n                  <Link to=\"/storage\">\r\n                    <MenuItem>Storage </MenuItem>\r\n                  </Link>\r\n                </MenuList>\r\n              </Menu>\r\n              <Link to=\"/settings\">\r\n                <IconButton\r\n                  size=\"md\"\r\n                  fontSize=\"lg\"\r\n                  icon={<Icon as={SettingsIcon} />}\r\n                />\r\n              </Link>\r\n              <Link>\r\n                <IconButton\r\n                  onClick={logout}\r\n                  size=\"md\"\r\n                  fontSize=\"lg\"\r\n                  icon={<Icon as={AiOutlineLogout} />}\r\n                />\r\n              </Link>\r\n            </>\r\n          ) : (\r\n            <Button variant=\"link\" size=\"md\">\r\n              <Link to=\"/login\">login</Link>\r\n            </Button>\r\n          )}\r\n        </HStack>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","export default __webpack_public_path__ + \"static/media/login.3acf12f7.png\";","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Button,\r\n  Input,\r\n  Flex,\r\n  Center,\r\n  Stack,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport imga from \"./login.png\";\r\nimport axios from \"axios\";\r\nimport AdminContext from \"../context/AdminContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const toast = useToast();\r\n  const [user, setuser] = useState({ email: \"\", password: \"\" });\r\n\r\n  const [submit, setsubmit] = useState(false);\r\n  const { setadmin } = useContext(AdminContext);\r\n\r\n  const history = useHistory();\r\n  const onsub = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    event.preventDefault();\r\n    setuser({ ...user, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const login = async () => {\r\n    setsubmit(true);\r\n    try {\r\n      const res = await axios.post(\"https://thetechhub-admin.herokuapp.com//settings/login\", {\r\n        ...user,\r\n      });\r\n      if (res) {\r\n        setsubmit(false);\r\n        setadmin({ id: res.data.admin.id, admin: res.data.admin });\r\n        localStorage.setItem(\"x-auth-id\", res.data.admin.id);\r\n        history.push(\"/\");\r\n      }\r\n    } catch (e) {\r\n      setsubmit(false);\r\n      toast({\r\n        title: `error`,\r\n        description: `${e.response.data.msg}`,\r\n        status: \"error\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Flex justify h=\"80vh\" w=\"100%\">\r\n        <Center w=\"50%\" alignSelf=\"center\">\r\n          <img src={imga} alt=\"\" />\r\n        </Center>\r\n        <Center w=\"50%\">\r\n          <Box w=\"50%\">\r\n            <form onSubmit={onsub}>\r\n              <Stack spacing={4}>\r\n                <FormControl id=\"email\">\r\n                  <FormLabel>Email address</FormLabel>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    onChange={onChange}\r\n                    isRequired\r\n                  />\r\n                </FormControl>\r\n\r\n                <FormControl id=\"password\">\r\n                  <FormLabel>Password</FormLabel>\r\n                  <Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    onChange={onChange}\r\n                    isRequired\r\n                  />\r\n                </FormControl>\r\n\r\n                <Button\r\n                  isLoading={submit}\r\n                  onClick={login}\r\n                  loadingText=\"Submitting\"\r\n                  colorScheme=\"teal\"\r\n                  w=\"100%\"\r\n                  type=\"submit\"\r\n                >\r\n                  login\r\n                </Button>\r\n              </Stack>\r\n            </form>\r\n          </Box>\r\n        </Center>\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Button,\r\n  Input,\r\n  Flex,\r\n  Center,\r\n  Stack,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport Axios from \"axios\";\r\nconst Settings = () => {\r\n  const [user, setuser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordCheck: \"\",\r\n    displayName: \"\",\r\n  });\r\n\r\n  const toast = useToast();\r\n  const [submit, setsubmit] = useState(false);\r\n  const onsub = async () => {\r\n    setsubmit(true);\r\n    await Axios.post(\"https://thetechhub-admin.herokuapp.com/settings/register\", user)\r\n      .then((res) => {\r\n        setsubmit(false);\r\n        console.log(res);\r\n        toast({\r\n          title: \"new admin added\",\r\n          description: `${res.data.displayName}`,\r\n          status: \"success\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setsubmit(false);\r\n        toast({\r\n          title: \"There was an error\",\r\n          description: `${err.response.data.msg}`,\r\n          status: \"error\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    setuser({ ...user, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Flex justify h=\"80vh\" w=\"100%\">\r\n        <Center w=\"50%\">\r\n          <Box w=\"50%\">\r\n            <Stack spacing={4}>\r\n              <FormControl id=\"email\">\r\n                <FormLabel>Email address</FormLabel>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  onChange={onChange}\r\n                  isRequired\r\n                />\r\n              </FormControl>\r\n\r\n              <FormControl id=\"password\">\r\n                <FormLabel>Password</FormLabel>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  onChange={onChange}\r\n                  isRequired\r\n                />\r\n              </FormControl>\r\n              <FormControl id=\"passwordCheck\">\r\n                <FormLabel>password Check</FormLabel>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"passwordCheck\"\r\n                  onChange={onChange}\r\n                  isRequired\r\n                />\r\n              </FormControl>\r\n\r\n              <FormControl id=\"displayName\">\r\n                <FormLabel>display Name</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"displayName\"\r\n                  onChange={onChange}\r\n                  isRequired\r\n                />\r\n              </FormControl>\r\n\r\n              <Button\r\n                isLoading={submit}\r\n                onClick={onsub}\r\n                loadingText=\"Submitting\"\r\n                colorScheme=\"teal\"\r\n                w=\"100%\"\r\n                type=\"submit\"\r\n              >\r\n                Add Admin\r\n              </Button>\r\n            </Stack>\r\n          </Box>\r\n        </Center>\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React, { useState, useEffect } from \"react\";\nimport Processor from \"./components/parts/Processor\";\nimport GraphicsCards from \"./components/parts/GraphicsCards\";\nimport Motherboard from \"./components/parts/Motherboard\";\nimport Psu from \"./components/parts/Psu\";\nimport Ram from \"./components/parts/Ram\";\nimport Cabinet from \"./components/parts/Cabinet\";\nimport Storage from \"./components/parts/Storage\";\nimport Home from \"./components/Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Laptop from \"./components/Laptop\";\nimport PreBuild from \"./components/PreBuild\";\nimport NavBar from \"./components/NavBar\";\nimport Login from \"./components/Login\";\nimport Settings from \"./components/Settings\";\nimport Axios from \"axios\";\nimport AdminContext from \"./context/AdminContext\";\n\nfunction App() {\n  const [admin, setadmin] = useState({\n    id: undefined,\n    admin: undefined,\n  });\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let idauth = localStorage.getItem(\"x-auth-id\");\n\n      if (idauth === null) {\n        localStorage.setItem(\"x-auth-id\", null);\n        idauth = \"\";\n      }\n\n      const idRes = await Axios.post(\n        \"https://thetechhub-admin.herokuapp.com//settings/tokenIsValid\",\n        null,\n        {\n          headers: { \"x-auth-id\": idauth },\n        }\n      );\n\n      if (idRes.data) {\n        const res = await Axios.get(\n          \"https://thetechhub-admin.herokuapp.com//settings\",\n          {\n            headers: { \"x-auth-id\": idauth },\n          }\n        );\n        setadmin({\n          idauth,\n          admin: res.data,\n        });\n      }\n    };\n    checkLoggedIn();\n  });\n\n  return (\n    <AdminContext.Provider value={{ admin, setadmin }}>\n      <Router>\n        <NavBar />\n        <Switch>\n          {admin.admin ? (\n            <>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route exact path=\"/laptop\">\n                <Laptop />\n              </Route>\n              <Route exact path=\"/prebuild\">\n                <PreBuild />\n              </Route>\n              <Route exact path=\"/processor\">\n                <Processor />\n              </Route>\n              <Route path=\"/graphicscard\">\n                <GraphicsCards />\n              </Route>\n              <Route path=\"/motherboard\">\n                <Motherboard />\n              </Route>\n              <Route path=\"/ram\">\n                <Ram />\n              </Route>\n              <Route path=\"/cabinet\">\n                <Cabinet />\n              </Route>\n              <Route path=\"/storage\">\n                <Storage />\n              </Route>\n              <Route path=\"/psu\">\n                <Psu />\n              </Route>\n              <Route path=\"/settings\">\n                <Settings />\n              </Route>\n            </>\n          ) : (\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n          )}\n        </Switch>\n      </Router>\n    </AdminContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ChakraProvider>\n        <App />\n      </ChakraProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}